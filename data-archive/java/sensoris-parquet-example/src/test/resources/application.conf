env {
  udf = com.here.platform.data.archive.example.SensorisParquetSplittedUDFExample
}

source {
   hrn = "<UPDATE_ME>"    # Eg:- hrn = "hrn:here:data::olp-here:sensor-data-stream" or hrn = "hrn:here-cn:data::olp-cn-here:sensor-data-stream" (for China)
   layer = "<UPDATE_ME>"    # Eg:- layer = "stream-layer"
   consumer-group = "<UPDATE_ME>"    # Eg:- consumer-group = "my-sensor-data-stream-parquet-group"
   consumer-id = "my-unique-consumer-id"
}

aggregation {
  window-seconds = 900
  # This value should be less than or equal to number of workers you will select when creating pipeline
  parallelism = 1
}

sink {
  hrn = "<UPDATE_ME>"    # Eg:- hrn = "hrn:here:data::olp-here:sensor-data-archive" or hrn = "hrn:here-cn:data::olp-cn-here:sensor-data-archive" (for China)
  layer = "<UPDATE_ME>"    # Eg:- layer = "index-layer"
}

error {
  strategy = "ignore"
  # You must define following 2 properties if you select "deadletter" strategy.
  # This index layer must have special settings. Refer application.conf under src/main/resources or developer guide for details.
  # deadletter.hrn = "<UPDATE_ME>"    # Eg:- deadletter.hrn = "hrn:here:data::olp-here:sensor-data-deadletter-avro" or deadletter.hrn = "hrn:here-cn:data::olp-cn-here:sensor-data-deadletter-avro" (for China)
  # deadletter.layer = "<UPDATE_ME>"    # Eg:- deadletter.layer = "index-layer"
}

here.platform.data-client {
  endpoint-locator {
    discovery-service-env = <UPDATE_ME>    # Eg:- discovery-service-env = here or discovery-service-env = here-cn (for China)
  }
  stream.connector.consumer = "http-connector"

  # Define the proxy configuration. The credentials key is optional.
  #
  # proxy {
  #   host = "localhost"
  #   port = 9999
  #
  #   credentials {
  #     username: "user"
  #     password: "pass"
  #   }
  # }
}

# These settings are only used in the ExampleReader, not by the Data Archiving Library
example-reader {
  query {
    tile-id = <UPDATE_ME>    # Eg:- tile-id = 1476147 (Starting tile ID)
    start-timewindow = <UPDATE_ME>    # Eg:- start-timewindow = 1552592400000 (beginning of timewindow in epoch milliseconds, inclusive)
    end-timewindow = <UPDATE_ME>    # Eg:- end-timewindow = 1552593000000 (exclusive)
  }
}